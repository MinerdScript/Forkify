var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _ViewJs = require('./View.js');
var _ViewJsDefault = _parcelHelpers.interopDefault(_ViewJs);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class AddRecipeView extends _ViewJsDefault.default {
  _parentElement = document.querySelector('.upload');
  _message = 'Recipe was successfully uploaded.';
  _window = document.querySelector('.add-recipe-window');
  _overlay = document.querySelector('.overlay');
  _btnOpen = document.querySelector('.nav__btn--add-recipe');
  _btnClose = document.querySelector('.btn--close-modal');
  constructor() {
    super();
    this._addHandlerShowWindow();
    this._addHandlerHideWindow();
    this._ingredients = 6;
  }
  hideWindow() {
    this._overlay.classList.add('hidden');
    this._window.classList.add('hidden');
  }
  _toggleWindow() {
    this._overlay.classList.toggle('hidden');
    this._window.classList.toggle('hidden');
  }
  _addHandlerShowWindow() {
    this._btnOpen.addEventListener('click', this._toggleWindow.bind(this));
  }
  _addHandlerHideWindow() {
    this._btnClose.addEventListener('click', this._toggleWindow.bind(this));
    this._overlay.addEventListener('click', this._toggleWindow.bind(this));
  }
  addHandlerUpload(handler, handlerNewIngredient) {
    this._parentElement.addEventListener('submit', function (e) {
      e.preventDefault();
      console.log(e);
      if (e.submitter === 'button.btn--tiny.btn--increase-ingredients') {
        console.log('AIUAIAIA');
        handlerNewIngredient();
      }
      const dataArr = [...new FormData(this)];
      const data = Object.fromEntries(dataArr);
      handler(data);
    });
  }
  _generateMarkup() {
    return `
    <div class="upload__column">
    <h3 class="upload__heading">Recipe data</h3>
    <label>Title</label>
    <input required name="title" type="text" />
    <label>URL</label>
    <input required name="sourceUrl" type="text" />
    <label>Image URL</label>
    <input required name="image" type="text" />
    <label>Publisher</label>
    <input required name="publisher" type="text" />
    <label>Prep time</label>
    <input required name="cookingTime" type="number" />
    <label>Servings</label>
    <input required name="servings" type="number" />
  </div>

  <div class="upload__column scroll ingredients">
    <h3 class="upload__heading">Ingredients</h3>
    <label>Ingredient 1</label>
    <input
      type="text"
      required
      name="ingredient-1"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
    <label>Ingredient 2</label>
    <input
      type="text"
      name="ingredient-2"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
    <label>Ingredient 3</label>
    <input
      type="text"
      name="ingredient-3"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
    <label>Ingredient 4</label>
    <input
      type="text"
      name="ingredient-4"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
    <label>Ingredient 5</label>
    <input
      type="text"
      name="ingredient-5"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
    <label>Ingredient 6</label>
    <input
      type="text"
      name="ingredient-6"
      placeholder="Format: 'Quantity,Unit,Description'"
    />
  </div>
  <div class="add--ingredients">
          <span class="add--more--ingredients">
            Click to add more ingredients
          </span>
          <button class="btn--tiny btn--increase-ingredients">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}#icon-plus-circle"></use>
            </svg>
          </button>
        </div>
  <button class="btn upload__btn">
    <svg>
      <use href="${_urlImgIconsSvgDefault.default}#icon-upload-cloud"></use>
    </svg>
    <span>Upload</span>
  </button>`;
  }
}
exports.default = new AddRecipeView();
